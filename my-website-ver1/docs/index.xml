<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>blo.blo.blog</title>
    <link>https://kkkeevvvin.github.io/my-website-ver1/docs/</link>
    <description>Recent content on blo.blo.blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>utf-8</language>
    <lastBuildDate>Thu, 19 Oct 2023 22:05:28 +0800</lastBuildDate><atom:link href="https://kkkeevvvin.github.io/my-website-ver1/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[隨筆]關於打字練習網站</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/about-typing-test/</link>
      <pubDate>Thu, 19 Oct 2023 22:05:28 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/about-typing-test/</guid>
      <description>昨天後來就開始做我的打字練習網站MyType  。發現昨天說的課程  內容挺詳細的，其實只要把東西複製貼上就做完了八成，原本的 JavaScript 就已經能動了，剩下的就是寫 CSS 讓版面好看一點，微調一下 JavaScript。
認真看了下 git log，做了比較有用的事有：
 讓輸入錯誤的字顯示紅色 關掉輸入框的 autocomplete 結束時把 highlight 的單字還原，清空輸入框 從第一個輸入開始計時，若重新開始時重設計時器 還算好看的排版  心得是怎麼才寫一點點 code，整陀 code 就亂七八糟。
&amp;hellip;
有人跟我說可以做中文的打字練習，然後有鍵盤的。去參考了其他網站，發現這是要鍵盤一顆一顆自己刻出來，還是有什麼聰明的方法我還沒想到&amp;hellip; 或許可以用 CSS Grid?
&amp;hellip;
看了看其他打字練習網站之後的想法：
中文打字的介面都好醜(無意冒犯&amp;hellip;)，感覺有一些時間沒人在做這個東西。
typings.gg  全部都是用 JavaScript 刻出來的。最新的 issue  有人在問這個 project 還活著嗎，有人回說 owner 超久沒上線了，其他活人也都跑去 MonkeyType。
因為MonkeyType  和Keybr.com  都是用 TypeScript，查了一下是跟 JavaScipt 有點像的東西。感覺我可以先參考 typings.gg，多做一些功能，看看 code style 有沒有可以學習的地方，之後再看看吧。
&amp;hellip;
打字練習還有市場嗎？除了上班族和工程師，有什麼人會需要常常用到鍵盤，而且還需要速度快？
Vision Pro 隨然沒有實體鍵盤，但還是有虛擬鍵盤，用攝影機去偵測手的位置。
如果未來變成偵測腦波來輸入的話？電競變成腦波大賽？
查了才發現 2018 年就有人在想這件事了，The future of typing doesn’t involve a keyboard  ，還未細讀。</description>
    </item>
    
    <item>
      <title>[隨筆] 把舊網站重新上線</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/republish-old-web/</link>
      <pubDate>Wed, 18 Oct 2023 16:21:54 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/republish-old-web/</guid>
      <description>昨天  嘗試了把這個舊網站重新上線未果。
今天花了不少時間終於發現問題了！因為使用hugo指令產生靜態網頁的結果之間的超連結都會以發布的網址最為 baseURL，所以在本機端只能利用hugo server指令預覽結果。
另外，將網頁發佈到 Github Page 時，在完成 Push 之後需要一段時間資料才會被放到 Server 上，所以會有一段時間差才會完成更新！這個現象似乎有在計網概提過 🤔
&amp;hellip;
這篇文章的最前面用到的超連結，是今天發現的小東西！
在 Hugo 的 markdown 文件中如果需要連結其他文件的話可以使用：
{{ &amp;lt;ref &amp;quot;&amp;lt;filename&amp;gt;.md&amp;quot;&amp;gt; }} more detail  &amp;hellip;
最近，我囫圇吞棗的在 Codecademy 上學了不少東西，但是發現 HTML 和 CSS 還是不太熟悉，再加上 Javascript 的話，可能就會一團混亂，雖然課程中有安排 project，但我覺得練習量還是不夠。因為最近常在用Monkeytype  和keybr  練習打字，也有找到 Microsoft 的課程Web-Dev-For-Beginners  其中有個部分就是實作簡單的 typing test。大概會用個幾天把這個 side project 做出來，也應該會寫點記錄。</description>
    </item>
    
    <item>
      <title>[隨筆] 過了好久好久...</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/after-a-long-time/</link>
      <pubDate>Tue, 17 Oct 2023 19:43:47 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/after-a-long-time/</guid>
      <description>從上次更新到寫這篇文章的當下，已經不知不覺地過了兩年。
之間發生了好多事。
&amp;hellip;
因為已經把這個 repo 的 github page 拿掉，差點忘了怎麼 run 他的 server。
最近在 codecademy 選了 Full-stack Engineer Path 學學前後端，想到自己曾經做過這個東西，也覺得應該要寫點筆記，既然要寫就想說寫好一點順便放在個人網站以後當履歷 XD
&amp;hellip;
嘗試了一下，發現不知道為什麼沒有辦法生成靜態網頁。
那就先當作是我的記事本吧~~ 剩下的有空再說！</description>
    </item>
    
    <item>
      <title>[入門] 圖形使用者界面與命令列界面</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/intro_cli/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/intro_cli/</guid>
      <description>前言 現在的日常生活應該少不了電腦和手機，大家應該會很習慣使用「圖形使用者界面（GUI, Graph User Interface）」。我們可以回想平常都是怎麼使用手機或電腦，我們會看著螢幕中的各種圖示，藉由觸控螢幕、滑鼠或觸控板的操作，得到我們想要的結果，比如說打開應用程式或瀏覽網頁之類的。我們就是依靠「圖形使用者界面」才能這麼做的。
把「圖形使用者界面」這個詞拆開來解釋，「圖形」是我們看到的那些視窗、按鈕、圖示、工具列和選單等等；「使用者界面」則是電腦和我們人類使用者互動的媒介。
然而，使用者界面並不是一開始就是圖形使用者界面。在電腦剛出現的年代是沒有滑鼠的，也沒有強大的運算能力和記憶體可以支援精美的畫面，所以這時候的使用者界面是「命令列界面（CLI, Command-Line Interface）」。
命令列界面 如果有看過經典電影《駭客任務》（The Matrix），應該對下面的畫面印象深刻。沒有看過的人可以找個機會去看，你不會後悔的！這個畫面可能會讓人覺得駭客很酷，他們的電腦會閃閃發光，總是在做無法讓人理解的事情。
但是，駭客或是各種資訊相關工程師他們經常會用到的東西不是長那樣，其實長這樣：
這個東西就是命令列界面。
使用命令列界面，其實跟使用圖形使用者界面很像，我們的最終目的都是要電腦乖乖聽話，服從我們的指令。在圖形使用者界面中，我們的指令就是點擊螢幕上的某個位置或是其他操作，電腦會做出相對的回應；在命令列界面中，我們的指令會是各種字元的組合，按下Enter之後我們也能得到相應的結果，像是上面那張圖片裡會輸出幾行文字。
Why CLI  節省電腦資源，電腦運行的速度變快 熟習操作以後，可以減少使用滑鼠，節省時間 方便處理重複且大量的檔案 可以更精確的使用電腦 在自己的電腦上擁有更大的權限 增加電腦使用方式的多樣性  打開命令列界面 這邊介紹在Windows和Linux底下打開命令列界面的方法：
Windows Windows下面有兩種原生的命令列界面cmd(Command Prompt,命令提示字元)和PowerShell。後者是Windows開發來取代前者的，詳見官網文章  。
要開啟這兩種界面，首先按下win鍵打開找到搜尋框：
接著，鍵入cmd或PowerShell找到並且按下Enter執行：
但是，這個些並不是今天要介紹的主角，筆者也沒有深入研究過。
Linux 我們來看看在Linux底下的命令列界面，它叫做終端機Terminal，跟使用windows一樣，我們在按下Super鍵（沒錯就是Win鍵）叫出搜尋框，搜尋Terminal，按下Enter，下圖以Ubuntu做示範。
我們可以用指令：
echo $SHELL 可以看出來使用的是哪一種Shell，Shell簡單來說就是指令的解釋器，Shell有很多種類，這裡可以看出來我們使用的是Bash。（其他方法  ）
Bash 當我們學習電腦的一個新東西時，我們都希望它不會一直變來變去，不會過時，有越多人在維護越好。
Bash目前是自由軟體基金會(FSF, Free Software Foundation)  的GNU計畫  維護的專案。自由軟體  ，根據自由軟體基金會對其的定義，是一類可以不受限制地自由使用、複製、研究、修改和分發的，尊重使用者自由的軟體。GNU計劃的目標是建立一套完全自由的作業系統，同時開發了大批其他的自由軟體，Bash是其中之一。
Bash有許多優點和廣大的社群支持，筆者認為如果有心學習，在網路上可以找到許多資源。
玩個遊戲吧 學習新東西總是讓人無力，沒關係，這裡準備了一個遊戲叫做Bashcrawl，在筆者的另一篇文章有詳細的介紹：[遊戲] Bashcrawl介紹  。
 參考資料 圖形使用者界面 ｜維基百科  命令列界面 | 維基百科  GUI | Computer Hope  Command line vs.</description>
    </item>
    
    <item>
      <title>[遊戲] Bashcrawl介紹</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/bashcrawl/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/bashcrawl/</guid>
      <description>簡介 這是一個純文字的地牢遊戲，他的呈現方式非常有趣，是用目錄和文件來代表房間和提示，遊玩的方式是用Bash的指令，很適合Bash的初學者玩，在遊戲的過程中，還可以學習到不同的指令使用方式。
在開始之前 我們的電腦之中必須有Bash或Zsh  。Linux, BSD和MacOS這些作業系統預設都包含Bash，可以跳過接下來這段。
在Windows安裝Bash 雖然Windows裡面沒有Bash，但是我們有許多方式  可以在Windows中安裝Bash。這邊將介紹如何使用Cygwin  。
首先點擊下載setup-x86_64.exe  ，或是到官網  找到適合的版本。
下載好後，按下開啟檔案或是到下載的資料夾中雙擊那個檔案，會出現一個對話框，按下「是」。
然後是Cygwin Setup的頁面：
不斷的按下一步，直到Choose A Download Site的頁面，這裡隨便挑一個就可以。
接下來會出現Select Packages的頁面，左上角有一個View的選單，選擇Full。在Search的框框中輸入Bash，按下Enter應該就可以看到下圖。最上面的Package就是Bash，在New的那一欄選擇最新的版本，點擊Src?那一欄的框框把它打勾，最後再按個幾次下一步，就會開始安裝。
結束安裝之後會出現下圖，按下完成。
桌面上應該會出現一個圖示，點擊就可以在Windows中使用Bash了。
安裝Bashcrawl 到官網  或是點擊這裡  下載並且在下載裡面解壓縮，不用更動它的名字。（方便後面的操作。）
開始遊戲 這邊將以在Windows中使用Cygwin Terminal為例。
首先打開Cygwin Terminal，會看到：
blobloblog@MyDesktop ~ $ ＠前面是你的使用者名稱，@後面是你的電腦名稱，隔一個空格是你當前的目錄(也就是資料夾)，~表示是你的家目錄。$後面是你可以輸入指令的地方，按下Enter就可送出你的指令。
使用指令：
cd c:Users/&amp;lt;YOUR_USERNAME&amp;gt;/Downloads/bashcrawl-master cd是change directory切換目錄，是將你的目錄切換到後面指令的位置。
現在，我們已經到了bashcrawl的目錄，輸入指令ls，會出現當前目錄下的檔案：
blobloblog@MyDesktop /cygdrive/c/Users/blobloblog/Downloads/bashcrawl-master $ ls entrance LICENSE README.md 有一檔案寫著README.md，使用指令cat將他所有的內容輸出在終端機中：
cat README.md 或是使用less，可以用方向鍵瀏覽文件內容，按下q離開：
less README.md 仔細閱讀README.md，然後使用以下指令開始遊戲：
cd entrance/ 祝大家玩的愉快 ଘ(੭ˊᵕˋ)੭* ੈ✩
參考文件 https://marlborough-college.</description>
    </item>
    
    <item>
      <title>在Hugo網站中加入留言板</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_graphcomment/</link>
      <pubDate>Mon, 06 Sep 2021 11:15:28 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_graphcomment/</guid>
      <description>前言 留言板在部落格中是不可或缺的一部分，是讀者回饋作者最直接的方式。因為筆者是目前沒有太大的經濟能力，也沒有架設自己的伺服器，所以選用了有免費試用的第三方服務Graphcomment  ，每個月有1,000,000的流量，對小網站來說應該是很夠用了。如果之後要換平台，它也可以匯出所有的留言。
申請帳號以及設定 Graphcomment可以直接用Google、Twitter或Facebook登入，也可以用電子郵件註冊。
註冊完以後，按下Add site，會出現一個表單：
 Site name: 一個好記的名字就好，讓你自己容易管理各個網站 Unique ID: 會在之後的部份用到 Website URL: 就是你的網站URL Whitelist domains: 自己決定吧 Supported language: 好像是壞掉了，之後的設定可以再改  勾選我同意服務條款，按下送出，就完成了一個網站留言版後端的建立了。
接著進入設定，不要點小齒輪圖示，直接點剛才設定的Site name，會進入這個網站留言版後端。點選SETTING，進入Language的頁面選擇留言板的語言，因為沒有繁體中文，所以我是選英文。在Customization頁面中可以調整留言板的顏色，其他的設定也都可以自己調整看看。這個頁面記得先保留，等一下還會用到。
將Graphcomment加入Hugo 打開config.yml，加入：
params: GraphCommentId: &amp;lt;YOUR_UNIQUE_ID&amp;gt; comments: ture #如果哪天想關掉留言板，改成false就行了 在./layouts/partials中，加入或修改comments.html
{{ if ne .Params.comments false }} {{ if .Site.Params.GraphCommentId }} {{ partial &amp;quot;graphcomment.html&amp;quot; . }} {{ end }} {{ end }} 
接著到留言板後端的SETUP，在側邊連點選Universal code，下面有一些選項可以自行調整，然後複製那一段程式碼，回到./layouts/partials，新增graphcomment.html並且貼上那一段程式碼。
然後找到下面這行：
graphcommentId: &amp;quot;&amp;lt;YOUR_UNIQUE_ID&amp;gt;&amp;quot;, 把他修改成：
graphcommentId: {{ .Site.Params.GraphCommentId }}, 記得不要漏掉最後的逗號，因為後面還有其他程式碼需要用逗號隔開。</description>
    </item>
    
    <item>
      <title>Hugo網站的向外連結</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_link/</link>
      <pubDate>Sun, 05 Sep 2021 15:16:39 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_link/</guid>
      <description>前言 網站中少不了的就是超連結(Hyperlink)，網站中的連結也會影響搜尋引擎優化(Search Engine Optimization)，但是這隱含了網站被跨網站腳本攻擊(XSS)的可能性。
Hugo link模板 Hugo渲染link的模板在：
./layouts/_default/markup/render-link.html 如果沒有，自己新增一個就可以了。在裡面加上：
&amp;lt;a href=&amp;quot;{{ .Destination | safeURL }}&amp;quot; {{ with .Title}} title=&amp;quot;{{ . }}&amp;quot; {{ end }} {{ if strings.HasPrefix .Destination &amp;quot;http&amp;quot; }} target=&amp;quot;_blank&amp;quot; {{- /* 在新分頁中開啟連結 */ -}} rel=&amp;quot;noopener&amp;quot; {{- /* 避免XSS攻擊 */ -}} {{ end }}&amp;gt; {{ .Text }} &amp;lt;/a&amp;gt; 參考資料 How to Open Link in New Tab | Hugo  A小編  </description>
    </item>
    
    <item>
      <title>在Hugo網站中加入Favicon</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_favicon/</link>
      <pubDate>Sun, 05 Sep 2021 11:33:30 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_favicon/</guid>
      <description>Favicon是什麼？ 維基百科  是這麼說的：「Favicon是favorites icon的縮寫，亦被稱為website icon（網站圖示）、page icon（頁面圖示）或urlicon（URL圖示）。Favicon是與某個網站或網頁相關聯的圖示。」
Favicon可以讓網站更容易被記得，或是在Android或iOS的手機中藉由「加入主畫面」的功能產生一個web app。
Hugo後端的設定 只要在config.yml中加入：
params: assets: favicon: &amp;quot;&amp;lt;link / abs url&amp;gt;&amp;quot; favicon16x16: &amp;quot;&amp;lt;link / abs url&amp;gt;&amp;quot; favicon32x32: &amp;quot;&amp;lt;link / abs url&amp;gt;&amp;quot; apple_touch_icon: &amp;quot;&amp;lt;link / abs url&amp;gt;&amp;quot; safari_pinned_tab: &amp;quot;&amp;lt;link / abs url&amp;gt;&amp;quot; &amp;lt;link / abs url &amp;gt;是你的favicon來源，筆者是使用ICONS8  提供的免費favicon，在這裡直接填入我選擇的favicon的連結。也可以將favicon的檔案儲存在./static裡面，但是可能載入的速度會比較慢。
可以藉由修改./layouts/partials/head.html更深入的設定favicon的輸出。
參考文件 Where do I put my favicon with Hugo | stackoverflow  Adding Custom Favicon(s) | PaperMod  A小編  </description>
    </item>
    
    <item>
      <title>RSS簡介與Newsboat的使用</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/rss_newsboat_hugo/</link>
      <pubDate>Thu, 02 Sep 2021 17:16:37 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/rss_newsboat_hugo/</guid>
      <description>什麼是RSS? 下面這個好和弦  的影片裡有詳細的介紹。
  4:24 開始介紹Newsboat
安裝Newsboat 如果有安裝snap，可以直接使用
sudo snap install newsboat 進入程式之後可以按快捷鍵?，查看快捷鍵提示，也可以看#我的Newsboat設定  自訂快捷鍵。
Distrotube深入解析Newsboat RSS Reader 因為筆者特別喜歡Newsboat的簡潔版面和方便的鍵盤操作，所以另外又找到這個影片，對Newsboat有更進一步的了解。
  var tag = document.createElement(&#39;script&#39;); tag.src = &#34;https://www.youtube.com/player_api&#34;; var firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); var player; function onYouTubePlayerAPIReady() { ytplayer = new YT.Player(&#39;ytplayer&#39;, { videoId: &#34;CJXdQTGm1jg&#34;, }); console.log(ytplayer); } function playerSeekTo(player, seconds) { player.seekTo(seconds); }  1:46
如何編輯 urls
4:06
 以下都需要用空格隔開 自訂標題：在網址的後面加上 &amp;ldquo;~&amp;lt;YOUR_CUSTOM_TITLE&amp;gt;&amp;rdquo; 標籤：不需要雙引號，直接輸入你的標籤 註解： &amp;ldquo;!&amp;lt;YOUR_COMMENT&amp;gt;&amp;rdquo;  5:22</description>
    </item>
    
    <item>
      <title>在Hugo網站中加入Google Analytics</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_ga/</link>
      <pubDate>Thu, 02 Sep 2021 16:26:01 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_ga/</guid>
      <description>首先可以參考Google Analytics GA是什麼？  。
取得「評估ID」之後，在 config.yml 中加上：
googleAnalytics: &amp;lt;YOUR_TRACKING_ID&amp;gt; 並且在 params 下面加上：
env: production 接著去點點看你的網站，如果成功的話可以在GA的頁面，看到活動紀錄。</description>
    </item>
    
    <item>
      <title>在Hugo網站中加入LikeButton</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_likebutton/</link>
      <pubDate>Tue, 31 Aug 2021 16:10:27 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_likebutton/</guid>
      <description>不知道什麼是Likecoin的人可以先去看看這篇文章  。
這篇文章主要是參考Hugo 安裝 LikeCoin 教學 | WANcatServer  。
Hugo 可以使用自訂 Layout 的方式，在不改變主題的情況下改變網站設計，我們可以透過這個方式在每個文章下放置 LikeButton。
為了覆寫文章輸出的模板，將 theme 的 layouts 資料夾複製到專案目錄下。
cp -r theme/&amp;lt;YOUR_THEME&amp;gt;/layouts/ . Hugo 中的 Partial 功能，可以讓你建立小模板，嵌入在頁面中。參考文件  。
在 layouts 的 partials 資料夾建立 likecoin.html，寫入以下內容。你也可以在這裡加上想給讀者看的說明文字（HTML格式）。
&amp;lt;iframe class=&amp;quot;LikeCoin&amp;quot; height=&amp;quot;235&amp;quot; src=&amp;quot;https://button.like.co/in/embed/{{ .Site.Params.likerID }}/button?referrer={{ .Permalink }}&amp;quot; width=&amp;quot;100%&amp;quot; frameborder=0&amp;gt;&amp;lt;/iframe&amp;gt; 接下來在 config.yml 的params後面加入
likerID = &amp;quot;&amp;lt;your liker id&amp;gt;&amp;quot; 接著編輯文章使用的模板，通常是 _default/single.html。這就是一個 Go Template，在你想要的地方插入：
{{ partial &amp;quot;likecoin.html&amp;quot; . }} 建議插在 {{ .Content }} 後面，Like Button 就會接在文章後面。</description>
    </item>
    
    <item>
      <title>將網頁發佈到Github Page</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_on_github_page/</link>
      <pubDate>Wed, 04 Aug 2021 09:14:28 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_on_github_page/</guid>
      <description>建立 Github repository 登入 Github 的網頁，右上角會看到：
點擊加號，再點擊New repository：
出現建立的表單：
如果是要作為主要的個人網站，Repository name 建議可以使用&amp;lt;USERNAME&amp;gt;.github.io。如果你的 github repo 是命名成&amp;lt;USERNAME&amp;gt;.github.io的話，你的網頁就會發布在&amp;lt;USERNAME&amp;gt;.github.io；如果不是，會在&amp;lt;USERNAME&amp;gt;.github.io/&amp;lt;your_repo&amp;gt;
勾選Public，只有付費版本可以用Private的 repository 來建立 Github Page。其餘的選項可以自行決定。
最後按下Create repository。
上傳到 Github repository 如果沒有使用過 git，可以先參考Git 教學(1) : Git 的基本使用  ，完成你的 git 設定。
這裡以 hugo 專案預設的存檔路徑./public為例。
移動到public底下，開始用 git 管理這個資料夾：
git init 將所有檔案加入管理：
git add . 提交修改：
git commit -m &amp;quot;first commit&amp;quot; 連上自己的 github repo，並且做確認：
git remote add origin https://github.com/&amp;lt;USERNAME&amp;gt;/&amp;lt;your_repo&amp;gt;.git git remote -v 強制把現在的branch變成main。
git branch -M main 然後安裝並登入 GitHub Desktop（因為筆者不會設定登入認證），接著 add local repository，找到public這個資料夾。</description>
    </item>
    
    <item>
      <title>用Hugo製作網頁</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_from_scratch/</link>
      <pubDate>Tue, 03 Aug 2021 09:53:04 +0800</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/posts/hugo_from_scratch/</guid>
      <description>安裝Hugo 這篇以支援snap的Linux版本為例，下載擴充版本的Hugo。
snap install hugo --channel=extended 其他作業系統可以到 Install Hugo | Hugo  找到相應的指示安裝。
檢查是否安裝成功：
hugo version  若要解除安裝：
snap remove hugo 
開始網頁專案 確定安裝好Hugo之後，選好要存放網頁專案的目錄，用指令
 hugo new site mywebsite -f yml  mywebsite可以替換成其他你想要的名字。 -f yml指定使用yml格式，因為yml/yaml的格式比起toml更容易閱讀，根據Papermod的作者adityatelange  的說法  ，所以以下也將採用yml的格式。如果有需要，你可以很容易的找到YML to TOML  的轉換器。   可以看到hugo幫你建立好的檔案架構如下。
mywebsite/ ├── archetypes │ └── default.md ├── config.yml ├── content ├── data ├── layouts ├── static └── themes 選擇主題 我選擇的主題是PaperMod  ，因為這個主題裡面有很不錯的指引，也有舒服的版面設計。
移動到mywebsite底下執行以下指令，把PaperMod的資料複製到mywebsite/themes/PaperMod。
git clone https://github.</description>
    </item>
    
    
    
    <item>
      <title>關於我</title>
      <link>https://kkkeevvvin.github.io/my-website-ver1/docs/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kkkeevvvin.github.io/my-website-ver1/docs/about/</guid>
      <description>最近在研究架設網站和網站設計，不定時更新。
文章的底部都有Likebutton，如果覺得我寫的不錯有幫助到你，可以按讚給我一點支持，讓我拿到Likecoin，獲得實際收入。(｡･ω･｡)ﾉ♥
如果沒有使用過LikeCoin  ，點擊連結免費註冊，可以用我的id kkkevin當做推薦碼。成為LikeCoin的會員，以後也能到其他地方支持你喜歡的創作者。
如果有什麼問題歡迎留言告訴我，或是私訊我的IG  ，雖然目前IG還沒有空去經營，但是我會去收訊息的。
也可以用RSS訂閱我的文章  ，或是在手機中將我的網站「加到主畫面」  。
友站連結
A小編  香瓜星球的日常  </description>
    </item>
    
  </channel>
</rss>
